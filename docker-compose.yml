version: '3.8'

services:
  # Telegram Bot Application
  app:
    build: .
    container_name: telegram-bot
    restart: unless-stopped
    volumes:
      - ./app:/app/app
      - ./persistent_data/app:/app/data
      - ./scripts:/app/scripts
    ports:
      - "8443:8443"
    environment:
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@postgres:5432/telegram_bot
      - REDIS_URL=redis://redis:6379/0
      - CHROMA_PERSIST_DIRECTORY=/app/data/vector_store
      - WEBHOOK_URL=${WEBHOOK_URL}
      - WEBHOOK_SECRET=${WEBHOOK_SECRET}
      - PORT=8443
      - OPENAI_EMBEDDING_MODEL=${OPENAI_EMBEDDING_MODEL}
    depends_on:
      - postgres
      - redis
      - chroma
      - ngrok
  
  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: telegram-bot-postgres
    restart: unless-stopped
    volumes:
      - ./persistent_data/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=telegram_bot
    ports:
      - "5432:5432"
  
  # Redis for Rate Limiting
  redis:
    image: redis:7-alpine
    container_name: telegram-bot-redis
    restart: unless-stopped
    volumes:
      - ./persistent_data/redis:/data
    ports:
      - "6379:6379"
  
  # Ngrok Service for local development
  ngrok:
    image: ngrok/ngrok:latest
    container_name: ngrok
    restart: unless-stopped
    ports:
      - "4040:4040"
    command: http app:8443 --log=stdout
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}

  # ChromaDB for Vector Storage
  chroma:
    image: ghcr.io/chroma-core/chroma:latest
    container_name: telegram-bot-chroma
    restart: unless-stopped
    volumes:
      - ./persistent_data/chroma:/chroma/chroma
    environment:
      - CHROMA_DB_IMPL=duckdb+parquet
      - PERSIST_DIRECTORY=/chroma/chroma
    ports:
      - "8000:8000"

# No named volumes needed as we're using bind mounts
